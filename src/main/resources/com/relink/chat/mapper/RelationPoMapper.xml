<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.relink.chat.mapper.RelationPoMapper">
  <resultMap id="BaseResultMap" type="com.relink.chat.model.po.RelationPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="relation_id" jdbcType="INTEGER" property="relationId" />
    <result column="hoster" jdbcType="INTEGER" property="hoster" />
    <result column="guest" jdbcType="INTEGER" property="guest" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `relation_id`, `hoster`, `guest`
  </sql>
  <select id="selectByExample" parameterType="com.relink.chat.model.po.RelationPoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from relation
    where `relation_id` = #{relationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from relation
    where `relation_id` = #{relationId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.relink.chat.model.po.RelationPoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.relink.chat.model.po.RelationPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into relation (`relation_id`, `hoster`, `guest`
      )
    values (#{relationId,jdbcType=INTEGER}, #{hoster,jdbcType=INTEGER}, #{guest,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.relink.chat.model.po.RelationPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relationId != null">
        `relation_id`,
      </if>
      <if test="hoster != null">
        `hoster`,
      </if>
      <if test="guest != null">
        `guest`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relationId != null">
        #{relationId,jdbcType=INTEGER},
      </if>
      <if test="hoster != null">
        #{hoster,jdbcType=INTEGER},
      </if>
      <if test="guest != null">
        #{guest,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update relation
    <set>
      <if test="record.relationId != null">
        `relation_id` = #{record.relationId,jdbcType=INTEGER},
      </if>
      <if test="record.hoster != null">
        `hoster` = #{record.hoster,jdbcType=INTEGER},
      </if>
      <if test="record.guest != null">
        `guest` = #{record.guest,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update relation
    set `relation_id` = #{record.relationId,jdbcType=INTEGER},
      `hoster` = #{record.hoster,jdbcType=INTEGER},
      `guest` = #{record.guest,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.relink.chat.model.po.RelationPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update relation
    <set>
      <if test="hoster != null">
        `hoster` = #{hoster,jdbcType=INTEGER},
      </if>
      <if test="guest != null">
        `guest` = #{guest,jdbcType=INTEGER},
      </if>
    </set>
    where `relation_id` = #{relationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.relink.chat.model.po.RelationPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update relation
    set `hoster` = #{hoster,jdbcType=INTEGER},
      `guest` = #{guest,jdbcType=INTEGER}
    where `relation_id` = #{relationId,jdbcType=INTEGER}
  </update>
</mapper>